{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"./tree.service\";\nimport * as i2 from \"@angular/common\";\n\nfunction TreeComponent_li_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function TreeComponent_li_1_Template_button_click_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const node_r1 = restoredCtx.$implicit;\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.addNode(ctx_r2.tree, node_r1));\n    });\n    i0.ɵɵtext(3, \"N\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function TreeComponent_li_1_Template_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const node_r1 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.addChild(ctx_r4.tree, node_r1));\n    });\n    i0.ɵɵtext(5, \"C\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 1);\n    i0.ɵɵlistener(\"click\", function TreeComponent_li_1_Template_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r3);\n      const node_r1 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.removeNode(ctx_r5.tree, node_r1));\n    });\n    i0.ɵɵtext(7, \"R\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"app-tree\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const node_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", node_r1.name, \" \");\n    i0.ɵɵadvance(7);\n    i0.ɵɵattribute(\"tree\", node_r1.children);\n  }\n}\n\nexport class TreeComponent {\n  constructor(treeService) {\n    this.treeService = treeService;\n    this.tree = [];\n    this.treeReturn = [];\n  }\n\n  ngOnInit() {\n    this.treeReturn = this.treeService.getTree();\n  }\n\n  addNode(tree, node) {\n    return this.treeService.addNode(this.tree, node);\n  }\n\n  addChild(tree, node) {\n    return this.treeService.addChild(this.tree, node);\n  }\n\n  removeNode(tree, node) {\n    return this.treeService.removeNode(this.tree, node);\n  }\n\n}\n\nTreeComponent.ɵfac = function TreeComponent_Factory(t) {\n  return new (t || TreeComponent)(i0.ɵɵdirectiveInject(i1.TreeService));\n};\n\nTreeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: TreeComponent,\n  selectors: [[\"app-tree\"]],\n  inputs: {\n    tree: \"tree\"\n  },\n  decls: 3,\n  vars: 3,\n  consts: [[4, \"ngFor\", \"ngForOf\"], [3, \"click\"]],\n  template: function TreeComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ul\");\n      i0.ɵɵtemplate(1, TreeComponent_li_1_Template, 9, 2, \"li\", 0);\n      i0.ɵɵpipe(2, \"async\");\n      i0.ɵɵelementEnd();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(2, 1, ctx.treeReturn));\n    }\n  },\n  dependencies: [i2.NgForOf, TreeComponent, i2.AsyncPipe],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJ0cmVlLmNvbXBvbmVudC5zY3NzIn0= */\"]\n});","map":{"version":3,"mappings":";;;;;;;;IAEIA;IACEA;IACAA;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,oDAAT;IAA4B,CAA5B;IAA8BA;IAACA;IACvCA;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,qDAAT;IAA6B,CAA7B;IAA+BA;IAACA;IACxCA;IAAQA;MAAA;MAAA;MAAA;MAAA,OAASA,uDAAT;IAA+B,CAA/B;IAAiCA;IAACA;IAC1CA;IACFA;;;;;IALEA;IAAAA;IAIUA;IAAAA;;;;ACGhB,OAAM,MAAOC,aAAP,CAAoB;EAIxBC,YAAoBC,WAApB,EAA4C;IAAxB;IAHX,YAAY,EAAZ;IACT,kBAAkB,EAAlB;EAEgD;;EAEhDC,QAAQ;IACN,KAAKC,UAAL,GAAkB,KAAKF,WAAL,CAAiBG,OAAjB,EAAlB;EACD;;EAEDC,OAAO,CAACC,IAAD,EAAYC,IAAZ,EAAqB;IAC1B,OAAO,KAAKN,WAAL,CAAiBI,OAAjB,CAAyB,KAAKC,IAA9B,EAAoCC,IAApC,CAAP;EACD;;EAEDC,QAAQ,CAACF,IAAD,EAAYC,IAAZ,EAAsB;IAC5B,OAAO,KAAKN,WAAL,CAAiBO,QAAjB,CAA0B,KAAKF,IAA/B,EAAqCC,IAArC,CAAP;EACD;;EAEDE,UAAU,CAACH,IAAD,EAAYC,IAAZ,EAAqB;IAC7B,OAAO,KAAKN,WAAL,CAAiBQ,UAAjB,CAA4B,KAAKH,IAAjC,EAAuCC,IAAvC,CAAP;EACD;;AApBuB;;;mBAAbR,eAAaD;AAAA;;;QAAbC;EAAaW;EAAAC;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;IAAA;MDTxBjB;MACEA;;MAOFA;;;;MAPuBA;MAAAA;;;6BCQZC,eAAaiB;EAAAC","names":["i0","TreeComponent","constructor","treeService","ngOnInit","treeReturn","getTree","addNode","tree","node","addChild","removeNode","selectors","inputs","decls","vars","consts","template","i2","styles"],"sourceRoot":"","sources":["C:\\Users\\GaghiZor\\Desktop\\treeview-app\\treeview-frontend\\src\\app\\tree\\tree.component.html","C:\\Users\\GaghiZor\\Desktop\\treeview-app\\treeview-frontend\\src\\app\\tree\\tree.component.ts"],"sourcesContent":["\n  <ul>\n    <li *ngFor=\"let node of treeReturn | async\">\n      {{ node.name }}\n      <button (click)=\"addNode(tree, node)\">N</button>\n      <button (click)=\"addChild(tree, node)\">C</button>\n      <button (click)=\"removeNode(tree, node)\">R</button>\n      <app-tree [attr.tree]=\"node.children\"></app-tree>\n    </li>\n  </ul>\n\n","import { Component, Input, OnInit } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TreeModel } from './tree.model';\nimport { TreeService } from './tree.service';\n\n@Component({\n  selector: 'app-tree',\n  templateUrl: './tree.component.html',\n  styleUrls: ['./tree.component.scss'],\n})\nexport class TreeComponent implements OnInit {\n  @Input() tree: any = [];\n  treeReturn: any = [];\n\n  constructor(private treeService: TreeService) {}\n\n  ngOnInit(): void {\n    this.treeReturn = this.treeService.getTree();\n  }\n\n  addNode(tree: any, node: any) {\n    return this.treeService.addNode(this.tree, node);\n  }\n\n  addChild(tree: any, node?: any) {\n    return this.treeService.addChild(this.tree, node);\n  }\n\n  removeNode(tree: any, node: any) {\n    return this.treeService.removeNode(this.tree, node);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}